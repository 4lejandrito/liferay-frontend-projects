{"version":3,"sources":["utils.js"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;KASM,K;;;;;QAOE,qB,oCAAwB;AAC9B,UAAO,KAAK,gCAAL,KAA0C,kBAAQ,MAAR,CAAe,QAAf,CAAwB,IAAzE;AACA,G;;QAOM,gC,+CAAmC;AACzC,UAAO,kBAAQ,MAAR,CAAe,QAAf,CAAwB,QAAxB,GAAmC,kBAAQ,MAAR,CAAe,QAAf,CAAwB,MAAlE;AACA,G;;QAOM,U,uBAAW,G,EAAK;AACtB,OAAI,MAAM,kBAAQ,GAAR,CAAV;AACA,UAAO,IAAI,WAAJ,KAAoB,IAAI,SAAJ,EAApB,GAAsC,IAAI,OAAJ,EAA7C;AACA,G;;QAOM,qB,kCAAsB,G,EAAK;AACjC,OAAI,MAAM,kBAAQ,GAAR,CAAV;AACA,UAAO,IAAI,WAAJ,KAAoB,IAAI,SAAJ,EAA3B;AACA,G;;QAQM,oB,iCAAqB,G,EAAK;AAChC,OAAI,GAAJ,EAAS;AACR,WAAO,MAAM,qBAAN,CAA4B,GAA5B,MAAqC,KAAK,gCAAL,EAA5C;AACA;AACD,UAAO,KAAP;AACA,G;;QAOM,uB,sCAA0B;AAChC,UAAO,CAAC,EAAE,kBAAQ,MAAR,CAAe,OAAf,IAA0B,kBAAQ,MAAR,CAAe,OAAf,CAAuB,SAAnD,CAAR;AACA,G;;;;;mBAIa,K","file":"src/utils/utils.js","sourcesContent":["'use strict';\n\nimport globals from '../globals/globals';\nimport Uri from 'metal-uri';\n\n/**\n * A collection of static utility functions.\n * @const\n */\nclass utils {\n\n\t/**\n\t * Gets the current browser path including hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getCurrentBrowserPath() {\n\t\treturn this.getCurrentBrowserPathWithoutHash() + globals.window.location.hash;\n\t}\n\n\t/**\n\t * Gets the current browser path excluding hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getCurrentBrowserPathWithoutHash() {\n\t\treturn globals.window.location.pathname + globals.window.location.search;\n\t}\n\n\t/**\n\t * Extracts the path part of an url.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPath(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname() + uri.getSearch() + uri.getHash();\n\t}\n\n\t/**\n\t * Extracts the path part of an url without hashbang.\n\t * @return {!string}\n\t * @static\n\t */\n\tstatic getUrlPathWithoutHash(url) {\n\t\tvar uri = new Uri(url);\n\t\treturn uri.getPathname() + uri.getSearch();\n\t}\n\n\t/**\n\t * Checks if url is in the same browser current url excluding the hashbang.\n\t * @param  {!string} url\n\t * @return {boolean}\n\t * @static\n\t */\n\tstatic isCurrentBrowserPath(url) {\n\t\tif (url) {\n\t\t\treturn utils.getUrlPathWithoutHash(url) === this.getCurrentBrowserPathWithoutHash();\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns true if HTML5 History api is supported.\n\t * @return {boolean}\n\t * @static\n\t */\n\tstatic isHtml5HistorySupported() {\n\t\treturn !!(globals.window.history && globals.window.history.pushState);\n\t}\n\n}\n\nexport default utils;"],"sourceRoot":"/source/"}